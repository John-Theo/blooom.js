{"version":3,"sources":["main.es.browser.js"],"names":["Blooom","[object Object]","selector","data","customConfig","length","sourceConfig","this","transformData","config","Config","handler","Handler","renderer","Renderer","dataNodes","dataLinks","washData","container","initCanvas","simulation","initSimulation","links","initLinks","nodes","initNodes","registerInteraction","renderTick","json","map","i","graph","forEach","concat","relationships","linkSourceKey","linkTargetKey","nodeGroupsKey","JSON","parse","loadNeo4j","results","linkedNodes","existedLinks","renameItemDict","source","target","d","id","indexOf","push","Object","create","filter","Boolean","unique","existedNodes","existedGroups","labels","assign","flat","v","svg","d3","select","html","append","attr","width","node","clientWidth","height","clientHeight","forceSimulation","velocityDecay","force","forceLink","forceManyBody","strength","forceCenter","forceCollide","radius","iterations","selectAll","enter","call","drag","nodeGroup","circle","glow","colors","getNodeClassIndex","borderColors","label","text","getNodeText","remove","linkGroup","arrow","linkLabelProperty","that","nodesLinked","index","on","focusLink","linkMouseEnter","removeFocus","linkMouseLeave","pinNode","fx","x","fy","y","focusNode","nodeMouseEnter","nodeMouseLeave","event","preventDefault","zoom","renderLink","configs","entries","k","c","rgb","darker","constructor","Array","getNodeLabel","func","toString","propertyKey","nodeLabelProperties","_isFunction","properties","each","classList","add","scaleExtent","scale","transform","active","alphaTarget","restart","removeNodePin","Utils","link","linkGlow","linkText","angle","utils","rotation","renderLinkText","renderLinkGlow","renderLinkArrow","nodeRadius","arrowSize","options","rel","outline","center","textBoundingBox","getBBox","u","unitaryVector","textMargin","n","unitaryNormalVector","rotatedPointA1","rotatePoint","rotatedPointB1","rotatedPointC1","rotatedPointD1","rotatedPointA2","rotatedPointB2","rotatedPointC2","rotatedPointD2","rotatedPointE2","rotatedPointF2","rotatedPointG2","rotatedPointA","rotatedPointB","rotatedPointC","rotatedPointD","mirror","nWeight","point","rotatedPoint","array","a","original","keys","defineProperty","getOwnPropertyDescriptor","Math","atan2","PI","newLength","sqrt","pow","vector","cx","cy","radians","cos","sin","p","rotate"],"mappings":"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","file":"main.es.browser.js","sourcesContent":["\r\nclass Blooom {\r\n  constructor(selector, data, customConfig) {\r\n    if (!data || !data.length) throw \"ValueError: invalid `data`\"\r\n    let sourceConfig;\r\n    [data, sourceConfig] = this.transformData(data);\r\n\r\n    this.config = new Config(this, sourceConfig, customConfig);\r\n    this.handler = new Handler(this);\r\n    this.renderer = new Renderer();\r\n\r\n    const [dataNodes, dataLinks] = this.washData(data);\r\n\r\n    this.container = this.initCanvas(selector);\r\n    this.simulation = this.initSimulation(dataNodes, dataLinks);\r\n    this.links = this.initLinks(dataLinks);\r\n    this.nodes = this.initNodes(dataNodes);\r\n\r\n    this.registerInteraction(dataLinks);\r\n    this.renderTick();\r\n  }\r\n\r\n  loadNeo4j(json) {\r\n    let nodes = [];\r\n    let links = [];\r\n\r\n    json\r\n      .map((i) => i.graph)\r\n      .forEach((i) => {\r\n        nodes = nodes.concat(i.nodes);\r\n        links = links.concat(i.relationships);\r\n      });\r\n\r\n    return [\r\n      { nodes, links },\r\n      {\r\n        linkSourceKey: \"startNode\",\r\n        linkTargetKey: \"endNode\",\r\n        nodeGroupsKey: \"labels\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  transformData(data) {\r\n    let sourceConfig = {};\r\n    if (typeof data === \"string\") data = JSON.parse(data);\r\n\r\n    return data[0] && data[0].graph\r\n      ? this.loadNeo4j(data)\r\n      : data.results && data.results[0]\r\n      ? this.loadNeo4j(data.results[0].data)\r\n      : null;\r\n  }\r\n\r\n  washData(data) {\r\n    let linkedNodes = [];\r\n    let existedLinks = [];\r\n    const dataLinks = renameItemDict(data.links, {\r\n      source: this.config.linkSourceKey,\r\n      target: this.config.linkTargetKey,\r\n    })\r\n      .map((d) => {\r\n        let id = `${d.source}-${d.target}`;\r\n        if (existedLinks.indexOf(id) >= 0) return null;\r\n        linkedNodes.push(d.source), linkedNodes.push(d.target);\r\n        existedLinks.push(id);\r\n        return Object.create(d);\r\n      })\r\n      .filter(Boolean);\r\n\r\n    linkedNodes = unique(linkedNodes);\r\n\r\n    let existedNodes = [];\r\n    let existedGroups = [];\r\n    const dataNodes = renameItemDict(data.nodes, {\r\n      labels: this.config.nodeGroupsKey,\r\n    })\r\n      .map((d) => {\r\n        if (existedNodes.indexOf(d.id) >= 0 || linkedNodes.indexOf(d.id) < 0)\r\n          return null;\r\n        existedNodes.push(d.id);\r\n        existedGroups.push(d[this.config.nodeGroupsKey]);\r\n        return Object.create(d);\r\n      })\r\n      .filter(Boolean);\r\n\r\n    this.existedGroups = existedGroups.length\r\n      ? Object.assign(\r\n          ...unique(existedGroups.flat()).map((v, i) => ({ [v]: i }))\r\n        )\r\n      : [];\r\n\r\n    return [dataNodes, dataLinks];\r\n  }\r\n\r\n  initCanvas(selector) {\r\n    this.svg = d3\r\n      .select(selector)\r\n      .html(\"\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"blooom\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\");\r\n\r\n    this.width = this.svg.node().clientWidth;\r\n    this.height = this.svg.node().clientHeight;\r\n    this.svg.attr(\"viewBox\", [0, 0, this.width, this.height]);\r\n\r\n    return this.svg.append(\"g\");\r\n  }\r\n\r\n  initSimulation(dataNodes, dataLinks) {\r\n    return (\r\n      d3\r\n        .forceSimulation(dataNodes)\r\n        .velocityDecay(0.1)\r\n        .force(\r\n          \"link\",\r\n          d3.forceLink(dataLinks).id((d) => d.id)\r\n        )\r\n        .force(\"charge\", d3.forceManyBody().strength(-800))\r\n        .force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\r\n        .force(\r\n          \"collide\",\r\n          d3\r\n            .forceCollide()\r\n            .radius(40)\r\n            .iterations(2)\r\n        )\r\n    );\r\n  }\r\n\r\n  initNodes(dataNodes) {\r\n    const nodes = this.container\r\n      .selectAll(\".node\")\r\n      .data(dataNodes)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .call(this.handler.drag(this.simulation));\r\n\r\n    this.nodeGroup = {\r\n      circle: nodes\r\n        .append(\"circle\")\r\n        .attr(\"class\", \"glow\")\r\n        .attr(\"r\", 25),\r\n      glow: nodes\r\n        .append(\"circle\")\r\n        .attr(\"class\", \"circle\")\r\n        .attr(\"r\", 25)\r\n        .attr(\r\n          \"fill\",\r\n          (d) => this.config.colors[this.config.getNodeClassIndex(d.labels)]\r\n        )\r\n        .attr(\r\n          \"stroke\",\r\n          (d) =>\r\n            this.config.borderColors[this.config.getNodeClassIndex(d.labels)]\r\n        ),\r\n      label: nodes.append(\"text\").text((d) => this.config.getNodeText(d)),\r\n    };\r\n\r\n    return nodes;\r\n  }\r\n\r\n  clear() {\r\n    this.svg.remove();\r\n  }\r\n\r\n  initLinks(dataLinks) {\r\n    var links = this.container\r\n      .selectAll(\".link\")\r\n      .data(dataLinks)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"link\");\r\n\r\n    this.linkGroup = {\r\n      glow: links.append(\"path\").attr(\"class\", \"glow\"),\r\n      arrow: links.append(\"path\").attr(\"class\", \"arrow\"),\r\n      text: links.append(\"text\").text((d) => d[this.config.linkLabelProperty]),\r\n    };\r\n\r\n    return links;\r\n  }\r\n\r\n  registerInteraction(dataLinks) {\r\n    const that = this;\r\n\r\n    this.nodesLinked = [];\r\n    dataLinks.forEach(function(d) {\r\n      that.nodesLinked[d.source.index + \"-\" + d.target.index] = true;\r\n      that.nodesLinked[d.target.index + \"-\" + d.source.index] = true;\r\n    });\r\n\r\n    this.links\r\n      .on(\"mouseenter\", function(d) {\r\n        that.handler.focusLink(d);\r\n        that.config.linkMouseEnter && that.config.linkMouseEnter(d, that);\r\n      })\r\n      .on(\"mouseleave\", function(d) {\r\n        that.handler.removeFocus(that.nodes, that.links);\r\n        that.config.linkMouseLeave && that.config.linkMouseLeave(d, that);\r\n      });\r\n\r\n    this.nodes\r\n      .on(\"contextmenu\", (d) => {\r\n        that.handler.pinNode(that.nodes, d);\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        that.handler.focusNode(d);\r\n        that.config.nodeMouseEnter && that.config.nodeMouseEnter(d, that);\r\n      })\r\n      .on(\"mouseleave\", function(d) {\r\n        that.handler.removeFocus(that.nodes, that.links);\r\n        that.config.nodeMouseLeave && that.config.nodeMouseLeave(d, that);\r\n      });\r\n\r\n    this.svg\r\n      .on(\"contextmenu\", () => d3.event.preventDefault())\r\n      .call(this.handler.zoom());\r\n    this.svg.on(\"dblclick.zoom\", null);\r\n  }\r\n\r\n  renderTick() {\r\n    this.simulation.on(\"tick\", () => {\r\n      this.renderer.renderLink(\r\n        this.links,\r\n        this.linkGroup.glow,\r\n        this.linkGroup.text\r\n      );\r\n      this.nodes.attr(\"transform\", (d) => `translate(${d.x}, ${d.y})`);\r\n    });\r\n  }\r\n}\r\n\nclass Config {\r\n  nodeMouseEnter = null; \r\n  nodeMouseLeave = null; \r\n  linkMouseEnter = null; \r\n  linkMouseLeave = null; \r\n\r\n  colors = [\r\n    \"#68bdf6\",\r\n    \"#6dce9e\",\r\n    \"#faafc2\",\r\n    \"#f2baf6\",\r\n    \"#ff928c\",\r\n    \"#fcea7e\",\r\n    \"#ffc766\",\r\n    \"#405f9e\",\r\n    \"#a5abb6\",\r\n    \"#78cecb\",\r\n    \"#b88cbb\",\r\n    \"#ced2d9\",\r\n    \"#e84646\",\r\n    \"#fa5f86\",\r\n    \"#ffab1a\",\r\n    \"#fcda19\",\r\n    \"#797b80\",\r\n    \"#c9d96f\",\r\n    \"#47991f\",\r\n    \"#70edee\",\r\n    \"#ff75ea\",\r\n  ];\r\n\r\n  linkSourceKey = \"source\";\r\n  linkTargetKey = \"target\";\r\n  nodeGroupsKey = \"group\";\r\n\r\n  linkLabelProperty = \"type\";\r\n  nodeLabelProperties = null;\r\n\r\n\r\n  constructor(graph, ...configs) {\r\n    const that = this;\r\n    if (configs) {\r\n      for (let config of configs) {\r\n        Object.entries(config).forEach(([k, v]) => (that[k] = v));\r\n      }\r\n    }\r\n\r\n    this.graph = graph;\r\n\r\n    this.borderColors = this.colors.map((c) => d3.rgb(c).darker(0.5));\r\n\r\n  }\r\n\r\n  getNodeLabel(labels) {\r\n    return labels.constructor === Array ? labels[0] : labels;\r\n  }\r\n\r\n  getNodeClassIndex(labels) {\r\n    return this.graph.existedGroups[this.getNodeLabel(labels)];\r\n  }\r\n\r\n  _isFunction(func) {\r\n    return func && {}.toString.call(func) === '[object Function]'\r\n  }\r\n\r\n  getNodeText(d) {\r\n    const propertyKey = this.nodeLabelProperties[this.getNodeLabel(d.labels)];\r\n    if (this._isFunction(propertyKey)) {\r\n      return propertyKey(d);\r\n    } else {\r\n      return d.properties[propertyKey];\r\n    }\r\n  }\r\n}\r\n\nclass Handler {\r\n  constructor(graph) {\r\n    this.graph = graph;\r\n  }\r\n\r\n  focusLink(d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index == d.source.index || i.index == d.target.index) return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n    this.graph.links.each(function(i) {\r\n      if (i.source.index == d.source.index && i.target.index == d.target.index)\r\n        return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n  }\r\n\r\n  focusNode(d) {\r\n\r\n    const that = this;\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index == d.index || that.graph.nodesLinked[i.index + \"-\" + d.index])\r\n        return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n    this.graph.links.each(function(i) {\r\n      if (i.source.index == d.index || i.target.index == d.index) return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n  }\r\n\r\n  removeFocus() {\r\n    this.graph.nodes.each(function() {\r\n      this.classList.remove(\"faded\");\r\n    });\r\n    this.graph.links.each(function() {\r\n      this.classList.remove(\"faded\");\r\n    });\r\n  }\r\n\r\n  pinNode(node, d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index !== d.index) return;\r\n      this.classList.add(\"pinned\");\r\n    });\r\n  }\r\n\r\n  removeNodePin(d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index !== d.index) return;\r\n      this.classList.remove(\"pinned\");\r\n    });\r\n  }\r\n\r\n  zoom() {\r\n    const that = this;\r\n    return d3\r\n      .zoom()\r\n      .scaleExtent([0.1, 2])\r\n      .on(\"zoom\", () => {\r\n        const scale = +d3.event.transform.k;\r\n        that.graph.nodeGroup.label.attr(\r\n          \"opacity\",\r\n          scale > 0.5 ? 1 : scale < 0.4 ? 0 : (scale - 0.4) * 10\r\n        );\r\n        that.graph.linkGroup.text.attr(\r\n          \"opacity\",\r\n          scale > 0.5 ? 1 : scale < 0.4 ? 0 : (scale - 0.4) * 10\r\n        );\r\n        that.graph.container.attr(\"transform\", d3.event.transform);\r\n      });\r\n  }\r\n\r\n  drag(simulation) {\r\n    const that = this;\r\n\r\n    function dragstarted(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      that.removeNodePin(d);\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(d) {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    }\r\n\r\n    function dragended(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  }\r\n}\r\n\nclass Renderer {\r\n    utils = new Utils();\r\n\r\n      renderLink(link, linkGlow, linkText) {\r\n      const that = this;\r\n\r\n        link.attr(\"transform\", function (d) {\r\n        var angle = that.utils.rotation(d.source, d.target);\r\n        return (\r\n          \"translate(\" +\r\n          d.source.x +\r\n          \", \" +\r\n          d.source.y +\r\n          \") rotate(\" +\r\n          angle +\r\n          \")\"\r\n        );\r\n      });\r\n\r\n        const options = {\r\n        nodeRadius: 25,\r\n        arrowSize: 4,\r\n      };\r\n\r\n        this.renderLinkText(linkText);\r\n      this.renderLinkGlow(linkGlow);\r\n      this.renderLinkArrow(link, options);\r\n    }\r\n\r\n      renderLinkArrow(link, options) {\r\n      const that = this;\r\n\r\n        link.each(function () {\r\n        var rel = d3.select(this),\r\n          outline = rel.select(\".arrow\"),\r\n          text = rel.select(\"text\");\r\n\r\n          outline.attr(\"d\", function (d) {\r\n          var center = { x: 0, y: 0 },\r\n            angle = that.utils.rotation(d.source, d.target),\r\n            textBoundingBox = text.node().getBBox(),\r\n            textPadding = 5,\r\n            u = that.utils.unitaryVector(d.source, d.target),\r\n            textMargin = {\r\n              x:\r\n                (d.target.x -\r\n                  d.source.x -\r\n                  (textBoundingBox.width + textPadding) * u.x) *\r\n                0.5,\r\n              y:\r\n                (d.target.y -\r\n                  d.source.y -\r\n                  (textBoundingBox.width + textPadding) * u.y) *\r\n                0.5,\r\n            },\r\n            n = that.utils.unitaryNormalVector(d.source, d.target),\r\n            rotatedPointA1 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: 0 + (options.nodeRadius + 1) * u.x - n.x,\r\n                y: 0 + (options.nodeRadius + 1) * u.y - n.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointB1 = that.utils.rotatePoint(\r\n              center,\r\n              { x: textMargin.x - n.x, y: textMargin.y - n.y },\r\n              angle\r\n            ),\r\n            rotatedPointC1 = that.utils.rotatePoint(\r\n              center,\r\n              { x: textMargin.x, y: textMargin.y },\r\n              angle\r\n            ),\r\n            rotatedPointD1 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: 0 + (options.nodeRadius + 1) * u.x,\r\n                y: 0 + (options.nodeRadius + 1) * u.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointA2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - textMargin.x - n.x,\r\n                y: d.target.y - d.source.y - textMargin.y - n.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointB2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  n.x -\r\n                  u.x * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  n.y -\r\n                  u.y * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointC2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  n.x +\r\n                  (n.x - u.x) * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  n.y +\r\n                  (n.y - u.y) * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointD2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - (options.nodeRadius + 1) * u.x,\r\n                y: d.target.y - d.source.y - (options.nodeRadius + 1) * u.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointE2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x +\r\n                  (-n.x - u.x) * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y +\r\n                  (-n.y - u.y) * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointF2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  u.x * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  u.y * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointG2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - textMargin.x,\r\n                y: d.target.y - d.source.y - textMargin.y,\r\n              },\r\n              angle\r\n            );\r\n\r\n            return (\r\n            \"M \" +\r\n            rotatedPointA1.x +\r\n            \" \" +\r\n            rotatedPointA1.y +\r\n            \" L \" +\r\n            rotatedPointB1.x +\r\n            \" \" +\r\n            rotatedPointB1.y +\r\n            \" L \" +\r\n            rotatedPointC1.x +\r\n            \" \" +\r\n            rotatedPointC1.y +\r\n            \" L \" +\r\n            rotatedPointD1.x +\r\n            \" \" +\r\n            rotatedPointD1.y +\r\n            \" Z M \" +\r\n            rotatedPointA2.x +\r\n            \" \" +\r\n            rotatedPointA2.y +\r\n            \" L \" +\r\n            rotatedPointB2.x +\r\n            \" \" +\r\n            rotatedPointB2.y +\r\n            \" L \" +\r\n            rotatedPointC2.x +\r\n            \" \" +\r\n            rotatedPointC2.y +\r\n            \" L \" +\r\n            rotatedPointD2.x +\r\n            \" \" +\r\n            rotatedPointD2.y +\r\n            \" L \" +\r\n            rotatedPointE2.x +\r\n            \" \" +\r\n            rotatedPointE2.y +\r\n            \" L \" +\r\n            rotatedPointF2.x +\r\n            \" \" +\r\n            rotatedPointF2.y +\r\n            \" L \" +\r\n            rotatedPointG2.x +\r\n            \" \" +\r\n            rotatedPointG2.y +\r\n            \" Z\"\r\n          );\r\n        });\r\n      });\r\n    }\r\n\r\n      renderLinkGlow(linkGlow) {\r\n      const that = this;\r\n      linkGlow.attr(\"d\", function (d) {\r\n        var center = { x: 0, y: 0 },\r\n          angle = that.utils.rotation(d.source, d.target),\r\n          n = that.utils.unitaryNormalVector(d.source, d.target),\r\n          rotatedPointA = that.utils.rotatePoint(\r\n            center,\r\n            { x: 0 - n.x, y: 0 - n.y },\r\n            angle\r\n          ),\r\n          rotatedPointB = that.utils.rotatePoint(\r\n            center,\r\n            {\r\n              x: d.target.x - d.source.x - n.x,\r\n              y: d.target.y - d.source.y - n.y,\r\n            },\r\n            angle\r\n          ),\r\n          rotatedPointC = that.utils.rotatePoint(\r\n            center,\r\n            {\r\n              x: d.target.x - d.source.x,\r\n              y: d.target.y - d.source.y,\r\n            },\r\n            angle\r\n          ),\r\n          rotatedPointD = that.utils.rotatePoint(center, { x: 0, y: 0 }, angle);\r\n\r\n          return (\r\n          \"M \" +\r\n          rotatedPointA.x +\r\n          \" \" +\r\n          rotatedPointA.y +\r\n          \" L \" +\r\n          rotatedPointB.x +\r\n          \" \" +\r\n          rotatedPointB.y +\r\n          \" L \" +\r\n          rotatedPointC.x +\r\n          \" \" +\r\n          rotatedPointC.y +\r\n          \" L \" +\r\n          rotatedPointD.x +\r\n          \" \" +\r\n          rotatedPointD.y +\r\n          \" Z\"\r\n        );\r\n      });\r\n    }\r\n\r\n      renderLinkText(linkText) {\r\n      const that = this;\r\n      linkText.attr(\"transform\", function (d) {\r\n        var angle = (that.utils.rotation(d.source, d.target) + 360) % 360,\r\n          mirror = angle > 90 && angle < 270,\r\n          center = { x: 0, y: 0 },\r\n          n = that.utils.unitaryNormalVector(d.source, d.target),\r\n          nWeight = mirror ? 2 : -3,\r\n          point = {\r\n            x: (d.target.x - d.source.x) * 0.5 + n.x * nWeight,\r\n            y: (d.target.y - d.source.y) * 0.5 + n.y * nWeight,\r\n          },\r\n          rotatedPoint = that.utils.rotatePoint(center, point, angle);\r\n\r\n          return (\r\n          \"translate(\" +\r\n          rotatedPoint.x +\r\n          \", \" +\r\n          rotatedPoint.y +\r\n          \") rotate(\" +\r\n          (mirror ? 180 : 0) +\r\n          \")\"\r\n        );\r\n      });\r\n    }\r\n  }\nconst unique = (array) => array.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\nfunction renameItemDict(original, keys) {\r\n  return original.map(\r\n    (i) =>\r\n      Object.entries(keys).map(([k, v]) => {\r\n        if (k === v) return i;\r\n        Object.defineProperty(i, k, Object.getOwnPropertyDescriptor(i, v));\r\n        delete i[v];\r\n        return i;\r\n      })[0]\r\n  );\r\n}\r\n\r\nclass Utils {\r\n  rotation(source, target) {\r\n    return (\r\n      (Math.atan2(target.y - source.y, target.x - source.x) * 180) / Math.PI\r\n    );\r\n  }\r\n\r\n  unitaryVector(source, target, newLength) {\r\n    var length =\r\n      Math.sqrt(\r\n        Math.pow(target.x - source.x, 2) + Math.pow(target.y - source.y, 2)\r\n      ) / Math.sqrt(newLength || 1);\r\n\r\n    return {\r\n      x: (target.x - source.x) / length,\r\n      y: (target.y - source.y) / length,\r\n    };\r\n  }\r\n\r\n  unitaryNormalVector(source, target, newLength) {\r\n    var center = { x: 0, y: 0 },\r\n      vector = this.unitaryVector(source, target, newLength);\r\n\r\n    return this.rotatePoint(center, vector, 90);\r\n  }\r\n\r\n  rotate(cx, cy, x, y, angle) {\r\n    var radians = (Math.PI / 180) * angle,\r\n      cos = Math.cos(radians),\r\n      sin = Math.sin(radians),\r\n      nx = cos * (x - cx) + sin * (y - cy) + cx,\r\n      ny = cos * (y - cy) - sin * (x - cx) + cy;\r\n\r\n    return { x: nx, y: ny };\r\n  }\r\n\r\n  rotatePoint(c, p, angle) {\r\n    return this.rotate(c.x, c.y, p.x, p.y, angle);\r\n  }\r\n}\r\n"]}