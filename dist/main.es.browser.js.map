{"version":3,"sources":["main.es.browser.js"],"names":["Blooom","[object Object]","selector","data","customConfig","sourceConfig","this","transformData","config","Config","handler","Handler","renderer","Renderer","dataNodes","dataLinks","washData","container","initCanvas","simulation","initSimulation","links","initLinks","nodes","initNodes","registerInteraction","renderTick","json","map","i","graph","forEach","concat","relationships","linkSourceKey","linkTargetKey","nodeGroupsKey","JSON","parse","loadNeo4j","linkedNodes","renameItemDict","source","target","d","push","Object","create","unique","existedNodes","existedGroups","labels","indexOf","id","filter","x","assign","flat","v","svg","d3","select","html","append","attr","width","node","clientWidth","height","clientHeight","forceSimulation","velocityDecay","force","forceLink","forceManyBody","strength","forceCenter","forceCollide","radius","iterations","selectAll","enter","call","drag","nodeGroup","circle","glow","colors","getNodeClassIndex","borderColors","label","text","getNodeText","linkGroup","arrow","linkLabelProperty","that","nodesLinked","index","on","focusLink","linkMouseEnter","removeFocus","linkMouseLeave","pinNode","fx","fy","y","focusNode","nodeMouseEnter","nodeMouseLeave","event","preventDefault","zoom","renderLink","configs","entries","k","c","rgb","darker","constructor","Array","getNodeLabel","properties","nodeLabelProperties","each","classList","add","remove","scaleExtent","scale","transform","active","alphaTarget","restart","removeNodePin","Utils","link","linkGlow","linkText","angle","utils","rotation","renderLinkText","renderLinkGlow","renderLinkArrow","nodeRadius","arrowSize","options","rel","outline","center","textBoundingBox","getBBox","u","unitaryVector","textMargin","n","unitaryNormalVector","rotatedPointA1","rotatePoint","rotatedPointB1","rotatedPointC1","rotatedPointD1","rotatedPointA2","rotatedPointB2","rotatedPointC2","rotatedPointD2","rotatedPointE2","rotatedPointF2","rotatedPointG2","rotatedPointA","rotatedPointB","rotatedPointC","rotatedPointD","mirror","nWeight","point","rotatedPoint","array","a","original","keys","defineProperty","getOwnPropertyDescriptor","Math","atan2","PI","newLength","length","sqrt","pow","vector","cx","cy","radians","cos","sin","p","rotate"],"mappings":"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","file":"main.es.browser.js","sourcesContent":["\r\n\r\nclass Blooom {\r\n  constructor(selector, data, customConfig) {\r\n    let sourceConfig;\r\n    [data, sourceConfig] = this.transformData(data);\r\n\r\n    this.config = new Config(this, sourceConfig, customConfig);\r\n    this.handler = new Handler(this);\r\n    this.renderer = new Renderer();\r\n\r\n    const [dataNodes, dataLinks] = this.washData(data);\r\n\r\n    this.container = this.initCanvas(selector);\r\n    this.simulation = this.initSimulation(dataNodes, dataLinks);\r\n    this.links = this.initLinks(dataLinks);\r\n    this.nodes = this.initNodes(dataNodes);\r\n\r\n    this.registerInteraction(dataLinks);\r\n    this.renderTick();\r\n  }\r\n\r\n  loadNeo4j(json) {\r\n    let nodes = [];\r\n    let links = [];\r\n\r\n    json\r\n      .map((i) => i.graph)\r\n      .forEach((i) => {\r\n        nodes = nodes.concat(i.nodes);\r\n        links = links.concat(i.relationships);\r\n      });\r\n\r\n    return [\r\n      { nodes, links },\r\n      {\r\n        linkSourceKey: \"startNode\",\r\n        linkTargetKey: \"endNode\",\r\n        nodeGroupsKey: \"labels\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  transformData(data) {\r\n    let sourceConfig = {};\r\n    if (typeof data === \"string\") data = JSON.parse(data);\r\n\r\n    if (data[0].graph) [data, sourceConfig] = this.loadNeo4j(data);\r\n\r\n    return [data, sourceConfig];\r\n  }\r\n\r\n  washData(data) {\r\n    let linkedNodes = [];\r\n    const dataLinks = renameItemDict(data.links, {\r\n      source: this.config.linkSourceKey,\r\n      target: this.config.linkTargetKey,\r\n    }).map((d) => {\r\n      linkedNodes.push(d.source), linkedNodes.push(d.target);\r\n      return Object.create(d);\r\n    });\r\n\r\n    linkedNodes = unique(linkedNodes);\r\n\r\n    let existedNodes = [];\r\n    let existedGroups = [];\r\n    const dataNodes = renameItemDict(data.nodes, {\r\n      labels: this.config.nodeGroupsKey,\r\n    })\r\n      .map((d) => {\r\n        if (existedNodes.indexOf(d.id) >= 0 || linkedNodes.indexOf(d.id) < 0)\r\n          return null;\r\n        existedNodes.push(d.id);\r\n        existedGroups.push(d[this.config.nodeGroupsKey]);\r\n        return Object.create(d);\r\n      })\r\n      .filter((x) => x);\r\n\r\n    this.existedGroups = Object.assign(\r\n      ...unique(existedGroups.flat()).map((v, i) => ({ [v]: i }))\r\n    );\r\n\r\n    return [dataNodes, dataLinks];\r\n  }\r\n\r\n  initCanvas(selector) {\r\n    this.svg = d3\r\n      .select(selector)\r\n      .html(\"\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"blooom\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\");\r\n\r\n    this.width = this.svg.node().clientWidth;\r\n    this.height = this.svg.node().clientHeight;\r\n    this.svg.attr(\"viewBox\", [0, 0, this.width, this.height]);\r\n\r\n    return this.svg.append(\"g\");\r\n  }\r\n\r\n  initSimulation(dataNodes, dataLinks) {\r\n    return (\r\n      d3\r\n        .forceSimulation(dataNodes)\r\n        .velocityDecay(0.1)\r\n        .force(\r\n          \"link\",\r\n          d3.forceLink(dataLinks).id((d) => d.id)\r\n        )\r\n        .force(\"charge\", d3.forceManyBody().strength(-800))\r\n        .force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\r\n        .force(\"collide\", d3.forceCollide().radius(40).iterations(2))\r\n    );\r\n  }\r\n\r\n  initNodes(dataNodes) {\r\n    const nodes = this.container\r\n      .selectAll(\".node\")\r\n      .data(dataNodes)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .call(this.handler.drag(this.simulation));\r\n\r\n    this.nodeGroup = {\r\n      circle: nodes.append(\"circle\").attr(\"class\", \"glow\").attr(\"r\", 25),\r\n      glow: nodes\r\n        .append(\"circle\")\r\n        .attr(\"class\", \"circle\")\r\n        .attr(\"r\", 25)\r\n        .attr(\r\n          \"fill\",\r\n          (d) => this.config.colors[this.config.getNodeClassIndex(d.labels)]\r\n        )\r\n        .attr(\r\n          \"stroke\",\r\n          (d) =>\r\n            this.config.borderColors[this.config.getNodeClassIndex(d.labels)]\r\n        ),\r\n      label: nodes.append(\"text\").text((d) => this.config.getNodeText(d)),\r\n    };\r\n\r\n    return nodes;\r\n  }\r\n\r\n  initLinks(dataLinks) {\r\n    var links = this.container\r\n      .selectAll(\".link\")\r\n      .data(dataLinks)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"link\");\r\n\r\n    this.linkGroup = {\r\n      glow: links.append(\"path\").attr(\"class\", \"glow\"),\r\n      arrow: links.append(\"path\").attr(\"class\", \"arrow\"),\r\n      text: links.append(\"text\").text((d) => d[this.config.linkLabelProperty]),\r\n    };\r\n\r\n    return links;\r\n  }\r\n\r\n  registerInteraction(dataLinks) {\r\n    const that = this;\r\n\r\n    this.nodesLinked = [];\r\n    dataLinks.forEach(function (d) {\r\n      that.nodesLinked[d.source.index + \"-\" + d.target.index] = true;\r\n      that.nodesLinked[d.target.index + \"-\" + d.source.index] = true;\r\n    });\r\n\r\n    this.links\r\n      .on(\"mouseenter\", function (d) {\r\n        that.handler.focusLink(d);\r\n        that.config.linkMouseEnter && that.config.linkMouseEnter(d, that);\r\n      })\r\n      .on(\"mouseleave\", function (d) {\r\n        that.handler.removeFocus(that.nodes, that.links);\r\n        that.config.linkMouseLeave && that.config.linkMouseLeave(d, that);\r\n      });\r\n\r\n    this.nodes\r\n      .on(\"contextmenu\", (d) => {\r\n        that.handler.pinNode(that.nodes, d);\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      })\r\n      .on(\"mouseenter\", function (d) {\r\n        that.handler.focusNode(d);\r\n        that.config.nodeMouseEnter && that.config.nodeMouseEnter(d, that);\r\n      })\r\n      .on(\"mouseleave\", function (d) {\r\n        that.handler.removeFocus(that.nodes, that.links);\r\n        that.config.nodeMouseLeave && that.config.nodeMouseLeave(d, that);\r\n      });\r\n\r\n    this.svg\r\n      .on(\"contextmenu\", () => d3.event.preventDefault())\r\n      .call(this.handler.zoom());\r\n    this.svg.on(\"dblclick.zoom\", null);\r\n  }\r\n\r\n  renderTick() {\r\n    this.simulation.on(\"tick\", () => {\r\n      this.renderer.renderLink(\r\n        this.links,\r\n        this.linkGroup.glow,\r\n        this.linkGroup.text\r\n      );\r\n      this.nodes.attr(\"transform\", (d) => `translate(${d.x}, ${d.y})`);\r\n    });\r\n  }\r\n}\r\n\nclass Config {\r\n  nodeMouseEnter = null; \r\n  nodeMouseLeave = null; \r\n  linkMouseEnter = null; \r\n  linkMouseLeave = null; \r\n\r\n  colors = [\r\n    \"#68bdf6\",\r\n    \"#6dce9e\",\r\n    \"#faafc2\",\r\n    \"#f2baf6\",\r\n    \"#ff928c\",\r\n    \"#fcea7e\",\r\n    \"#ffc766\",\r\n    \"#405f9e\",\r\n    \"#a5abb6\",\r\n    \"#78cecb\",\r\n    \"#b88cbb\",\r\n    \"#ced2d9\",\r\n    \"#e84646\",\r\n    \"#fa5f86\",\r\n    \"#ffab1a\",\r\n    \"#fcda19\",\r\n    \"#797b80\",\r\n    \"#c9d96f\",\r\n    \"#47991f\",\r\n    \"#70edee\",\r\n    \"#ff75ea\",\r\n  ];\r\n\r\n  linkSourceKey = \"source\";\r\n  linkTargetKey = \"target\";\r\n  nodeGroupsKey = \"group\";\r\n\r\n  linkLabelProperty = \"type\";\r\n  nodeLabelProperties = null;\r\n\r\n\r\n  constructor(graph, ...configs) {\r\n    const that = this;\r\n    if (configs) {\r\n      for (let config of configs) {\r\n        Object.entries(config).forEach(([k, v]) => (that[k] = v));\r\n      }\r\n    }\r\n\r\n    this.graph = graph;\r\n\r\n    this.borderColors = this.colors.map((c) => d3.rgb(c).darker(0.5));\r\n\r\n  }\r\n\r\n  getNodeLabel(labels) {\r\n    return labels.constructor === Array ? labels[0] : labels;\r\n  }\r\n\r\n  getNodeClassIndex(labels) {\r\n    return this.graph.existedGroups[this.getNodeLabel(labels)];\r\n  }\r\n\r\n  getNodeText(d) {\r\n    return d.properties[this.nodeLabelProperties[this.getNodeLabel(d.labels)]];\r\n  }\r\n}\r\n\nclass Handler {\r\n  constructor(graph) {\r\n    this.graph = graph;\r\n  }\r\n\r\n  focusLink(d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index == d.source.index || i.index == d.target.index) return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n    this.graph.links.each(function(i) {\r\n      if (i.source.index == d.source.index && i.target.index == d.target.index)\r\n        return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n  }\r\n\r\n  focusNode(d) {\r\n\r\n    const that = this;\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index == d.index || that.graph.nodesLinked[i.index + \"-\" + d.index])\r\n        return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n    this.graph.links.each(function(i) {\r\n      if (i.source.index == d.index || i.target.index == d.index) return;\r\n      this.classList.add(\"faded\");\r\n    });\r\n  }\r\n\r\n  removeFocus() {\r\n    this.graph.nodes.each(function() {\r\n      this.classList.remove(\"faded\");\r\n    });\r\n    this.graph.links.each(function() {\r\n      this.classList.remove(\"faded\");\r\n    });\r\n  }\r\n\r\n  pinNode(node, d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index !== d.index) return;\r\n      this.classList.add(\"pinned\");\r\n    });\r\n  }\r\n\r\n  removeNodePin(d) {\r\n    this.graph.nodes.each(function(i) {\r\n      if (i.index !== d.index) return;\r\n      this.classList.remove(\"pinned\");\r\n    });\r\n  }\r\n\r\n  zoom() {\r\n    const that = this;\r\n    return d3\r\n      .zoom()\r\n      .scaleExtent([0.1, 2])\r\n      .on(\"zoom\", () => {\r\n        const scale = +d3.event.transform.k;\r\n        that.graph.nodeGroup.label.attr(\r\n          \"opacity\",\r\n          scale > 0.5 ? 1 : scale < 0.4 ? 0 : (scale - 0.4) * 10\r\n        );\r\n        that.graph.linkGroup.text.attr(\r\n          \"opacity\",\r\n          scale > 0.5 ? 1 : scale < 0.4 ? 0 : (scale - 0.4) * 10\r\n        );\r\n        that.graph.container.attr(\"transform\", d3.event.transform);\r\n      });\r\n  }\r\n\r\n  drag(simulation) {\r\n    const that = this;\r\n\r\n    function dragstarted(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      that.removeNodePin(d);\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(d) {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    }\r\n\r\n    function dragended(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  }\r\n}\r\n\nclass Renderer {\r\n    utils = new Utils();\r\n\r\n      renderLink(link, linkGlow, linkText) {\r\n      const that = this;\r\n\r\n        link.attr(\"transform\", function (d) {\r\n        var angle = that.utils.rotation(d.source, d.target);\r\n        return (\r\n          \"translate(\" +\r\n          d.source.x +\r\n          \", \" +\r\n          d.source.y +\r\n          \") rotate(\" +\r\n          angle +\r\n          \")\"\r\n        );\r\n      });\r\n\r\n        const options = {\r\n        nodeRadius: 25,\r\n        arrowSize: 4,\r\n      };\r\n\r\n        this.renderLinkText(linkText);\r\n      this.renderLinkGlow(linkGlow);\r\n      this.renderLinkArrow(link, options);\r\n    }\r\n\r\n      renderLinkArrow(link, options) {\r\n      const that = this;\r\n\r\n        link.each(function () {\r\n        var rel = d3.select(this),\r\n          outline = rel.select(\".arrow\"),\r\n          text = rel.select(\"text\");\r\n\r\n          outline.attr(\"d\", function (d) {\r\n          var center = { x: 0, y: 0 },\r\n            angle = that.utils.rotation(d.source, d.target),\r\n            textBoundingBox = text.node().getBBox(),\r\n            textPadding = 5,\r\n            u = that.utils.unitaryVector(d.source, d.target),\r\n            textMargin = {\r\n              x:\r\n                (d.target.x -\r\n                  d.source.x -\r\n                  (textBoundingBox.width + textPadding) * u.x) *\r\n                0.5,\r\n              y:\r\n                (d.target.y -\r\n                  d.source.y -\r\n                  (textBoundingBox.width + textPadding) * u.y) *\r\n                0.5,\r\n            },\r\n            n = that.utils.unitaryNormalVector(d.source, d.target),\r\n            rotatedPointA1 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: 0 + (options.nodeRadius + 1) * u.x - n.x,\r\n                y: 0 + (options.nodeRadius + 1) * u.y - n.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointB1 = that.utils.rotatePoint(\r\n              center,\r\n              { x: textMargin.x - n.x, y: textMargin.y - n.y },\r\n              angle\r\n            ),\r\n            rotatedPointC1 = that.utils.rotatePoint(\r\n              center,\r\n              { x: textMargin.x, y: textMargin.y },\r\n              angle\r\n            ),\r\n            rotatedPointD1 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: 0 + (options.nodeRadius + 1) * u.x,\r\n                y: 0 + (options.nodeRadius + 1) * u.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointA2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - textMargin.x - n.x,\r\n                y: d.target.y - d.source.y - textMargin.y - n.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointB2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  n.x -\r\n                  u.x * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  n.y -\r\n                  u.y * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointC2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  n.x +\r\n                  (n.x - u.x) * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  n.y +\r\n                  (n.y - u.y) * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointD2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - (options.nodeRadius + 1) * u.x,\r\n                y: d.target.y - d.source.y - (options.nodeRadius + 1) * u.y,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointE2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x +\r\n                  (-n.x - u.x) * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y +\r\n                  (-n.y - u.y) * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointF2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x:\r\n                  d.target.x -\r\n                  d.source.x -\r\n                  (options.nodeRadius + 1) * u.x -\r\n                  u.x * options.arrowSize,\r\n                y:\r\n                  d.target.y -\r\n                  d.source.y -\r\n                  (options.nodeRadius + 1) * u.y -\r\n                  u.y * options.arrowSize,\r\n              },\r\n              angle\r\n            ),\r\n            rotatedPointG2 = that.utils.rotatePoint(\r\n              center,\r\n              {\r\n                x: d.target.x - d.source.x - textMargin.x,\r\n                y: d.target.y - d.source.y - textMargin.y,\r\n              },\r\n              angle\r\n            );\r\n\r\n            return (\r\n            \"M \" +\r\n            rotatedPointA1.x +\r\n            \" \" +\r\n            rotatedPointA1.y +\r\n            \" L \" +\r\n            rotatedPointB1.x +\r\n            \" \" +\r\n            rotatedPointB1.y +\r\n            \" L \" +\r\n            rotatedPointC1.x +\r\n            \" \" +\r\n            rotatedPointC1.y +\r\n            \" L \" +\r\n            rotatedPointD1.x +\r\n            \" \" +\r\n            rotatedPointD1.y +\r\n            \" Z M \" +\r\n            rotatedPointA2.x +\r\n            \" \" +\r\n            rotatedPointA2.y +\r\n            \" L \" +\r\n            rotatedPointB2.x +\r\n            \" \" +\r\n            rotatedPointB2.y +\r\n            \" L \" +\r\n            rotatedPointC2.x +\r\n            \" \" +\r\n            rotatedPointC2.y +\r\n            \" L \" +\r\n            rotatedPointD2.x +\r\n            \" \" +\r\n            rotatedPointD2.y +\r\n            \" L \" +\r\n            rotatedPointE2.x +\r\n            \" \" +\r\n            rotatedPointE2.y +\r\n            \" L \" +\r\n            rotatedPointF2.x +\r\n            \" \" +\r\n            rotatedPointF2.y +\r\n            \" L \" +\r\n            rotatedPointG2.x +\r\n            \" \" +\r\n            rotatedPointG2.y +\r\n            \" Z\"\r\n          );\r\n        });\r\n      });\r\n    }\r\n\r\n      renderLinkGlow(linkGlow) {\r\n      const that = this;\r\n      linkGlow.attr(\"d\", function (d) {\r\n        var center = { x: 0, y: 0 },\r\n          angle = that.utils.rotation(d.source, d.target),\r\n          n = that.utils.unitaryNormalVector(d.source, d.target),\r\n          rotatedPointA = that.utils.rotatePoint(\r\n            center,\r\n            { x: 0 - n.x, y: 0 - n.y },\r\n            angle\r\n          ),\r\n          rotatedPointB = that.utils.rotatePoint(\r\n            center,\r\n            {\r\n              x: d.target.x - d.source.x - n.x,\r\n              y: d.target.y - d.source.y - n.y,\r\n            },\r\n            angle\r\n          ),\r\n          rotatedPointC = that.utils.rotatePoint(\r\n            center,\r\n            {\r\n              x: d.target.x - d.source.x,\r\n              y: d.target.y - d.source.y,\r\n            },\r\n            angle\r\n          ),\r\n          rotatedPointD = that.utils.rotatePoint(center, { x: 0, y: 0 }, angle);\r\n\r\n          return (\r\n          \"M \" +\r\n          rotatedPointA.x +\r\n          \" \" +\r\n          rotatedPointA.y +\r\n          \" L \" +\r\n          rotatedPointB.x +\r\n          \" \" +\r\n          rotatedPointB.y +\r\n          \" L \" +\r\n          rotatedPointC.x +\r\n          \" \" +\r\n          rotatedPointC.y +\r\n          \" L \" +\r\n          rotatedPointD.x +\r\n          \" \" +\r\n          rotatedPointD.y +\r\n          \" Z\"\r\n        );\r\n      });\r\n    }\r\n\r\n      renderLinkText(linkText) {\r\n      const that = this;\r\n      linkText.attr(\"transform\", function (d) {\r\n        var angle = (that.utils.rotation(d.source, d.target) + 360) % 360,\r\n          mirror = angle > 90 && angle < 270,\r\n          center = { x: 0, y: 0 },\r\n          n = that.utils.unitaryNormalVector(d.source, d.target),\r\n          nWeight = mirror ? 2 : -3,\r\n          point = {\r\n            x: (d.target.x - d.source.x) * 0.5 + n.x * nWeight,\r\n            y: (d.target.y - d.source.y) * 0.5 + n.y * nWeight,\r\n          },\r\n          rotatedPoint = that.utils.rotatePoint(center, point, angle);\r\n\r\n          return (\r\n          \"translate(\" +\r\n          rotatedPoint.x +\r\n          \", \" +\r\n          rotatedPoint.y +\r\n          \") rotate(\" +\r\n          (mirror ? 180 : 0) +\r\n          \")\"\r\n        );\r\n      });\r\n    }\r\n  }\nconst unique = (array) => array.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\nfunction renameItemDict(original, keys) {\r\n  return original.map(\r\n    (i) =>\r\n      Object.entries(keys).map(([k, v]) => {\r\n        if (k === v) return i;\r\n        Object.defineProperty(i, k, Object.getOwnPropertyDescriptor(i, v));\r\n        delete i[v];\r\n        return i;\r\n      })[0]\r\n  );\r\n}\r\n\r\nclass Utils {\r\n  rotation(source, target) {\r\n    return (\r\n      (Math.atan2(target.y - source.y, target.x - source.x) * 180) / Math.PI\r\n    );\r\n  }\r\n\r\n  unitaryVector(source, target, newLength) {\r\n    var length =\r\n      Math.sqrt(\r\n        Math.pow(target.x - source.x, 2) + Math.pow(target.y - source.y, 2)\r\n      ) / Math.sqrt(newLength || 1);\r\n\r\n    return {\r\n      x: (target.x - source.x) / length,\r\n      y: (target.y - source.y) / length,\r\n    };\r\n  }\r\n\r\n  unitaryNormalVector(source, target, newLength) {\r\n    var center = { x: 0, y: 0 },\r\n      vector = this.unitaryVector(source, target, newLength);\r\n\r\n    return this.rotatePoint(center, vector, 90);\r\n  }\r\n\r\n  rotate(cx, cy, x, y, angle) {\r\n    var radians = (Math.PI / 180) * angle,\r\n      cos = Math.cos(radians),\r\n      sin = Math.sin(radians),\r\n      nx = cos * (x - cx) + sin * (y - cy) + cx,\r\n      ny = cos * (y - cy) - sin * (x - cx) + cy;\r\n\r\n    return { x: nx, y: ny };\r\n  }\r\n\r\n  rotatePoint(c, p, angle) {\r\n    return this.rotate(c.x, c.y, p.x, p.y, angle);\r\n  }\r\n}\r\n"]}